import axios from "axios";
import React, { Component } from "react";
import withRouter from "../utils/withRouter";

class ProductDetail extends Component {
  constructor(props) {
    super(props);
    this.state = {
      product: null,
      quantity: 1,
    };
  }

  componentDidMount() {
    const params = this.props.params || {};
    if (params.id) {
      this.apiGetProduct(params.id);
    }
  }

  apiGetProduct(id) {      // apiGetProduct(id) l√† m·ªôt h√†m b·∫•t ƒë·ªìng b·ªô (async function) d√πng ƒë·ªÉ l·∫•y th√¥ng tin s·∫£n ph·∫©m t·ª´ server theo id.
    axios
      .get(`/api/customer/products/${id}`)
      .then((res) => {
        this.setState({ product: res.data });
      })
      .catch((error) => {
        console.error("Error fetching product details:", error);
        this.setState({ product: null });
      });
  }

  addToCart = () => {
    const { product, quantity } = this.state;      // L·∫•y th√¥ng tin s·∫£n ph·∫©m v√† s·ªë l∆∞·ª£ng t·ª´ state
    let cart = JSON.parse(localStorage.getItem("cartItems")) || [];  // L·∫•y gi·ªè h√†ng t·ª´ localStorage ho·∫∑c t·∫°o m·ªõi n·∫øu ch∆∞a c√≥

    const existingProductIndex = cart.findIndex(      // T√¨m ki·∫øm s·∫£n ph·∫©m trong gi·ªè h√†ng
      (item) => item._id === product._id      // So s√°nh ID s·∫£n ph·∫©m
    );

    if (existingProductIndex !== -1) {      // N·∫øu s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i trong gi·ªè h√†ng
      cart[existingProductIndex].quantity += quantity;      // TƒÉng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
    } else {
      cart.push({ ...product, quantity });      // Th√™m s·∫£n ph·∫©m m·ªõi v√†o gi·ªè h√†ng  //quantity: l√† s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
    }

    localStorage.setItem("cartItems", JSON.stringify(cart));      // L∆∞u gi·ªè h√†ng v√†o localStorage
    this.setState({ quantity: 1 });    // ƒê·∫∑t l·∫°i s·ªë l∆∞·ª£ng v·ªÅ 1 sau khi th√™m v√†o gi·ªè h√†ng
  
    window.dispatchEvent(new Event("storage"));      // G·ª≠i s·ª± ki·ªán ƒë·ªÉ c·∫≠p nh·∫≠t gi·ªè h√†ng tr√™n c√°c component kh√°c
    window.location.reload();      // T·∫£i l·∫°i trang ƒë·ªÉ c·∫≠p nh·∫≠t gi·ªè h√†ng
  };

  render() {
    const { product, quantity } = this.state;      // L·∫•y th√¥ng tin s·∫£n ph·∫©m v√† s·ªë l∆∞·ª£ng t·ª´ state

    if (!product) {
      return <p className="text-center">Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m</p>;      // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m
    }

    return (
      <div className="container my-5">
        <div className="card shadow-lg p-4 rounded-4">
          <div className="row align-items-center">
            <div className="col-md-6 text-center">
              <img
                src={
                  product.image
                    ? `data:image/jpg;base64,${product.image}`
                    : "/default-image.jpg"
                }
                alt={product.name}
                className="img-fluid rounded"
                style={{ maxHeight: "400px", objectFit: "cover" }}
              />
            </div>
            <div className="col-md-6">
              <h2 className="text-success fw-bold mb-3">{product.name}</h2>
              <p>
                <strong>M√£ SP:</strong> {product._id}
              </p>
              <p>
                <strong>Gi√°:</strong>{" "}
                <span className="text-danger fs-5 fw-bold">
                  {product.price.toLocaleString()} VND
                </span>
              </p>
              <p>
                <strong>Danh m·ª•c:</strong>{" "}
                {product.category ? product.category.name : "Ch∆∞a ph√¢n lo·∫°i"}
              </p>
              <div className="mb-3">
                <label className="form-label fw-bold">S·ªë l∆∞·ª£ng</label>
                <input
                  type="number"
                  className="form-control"
                  min="1"
                  max="99"
                  value={quantity}
                  onChange={(e) =>
                    this.setState({ quantity: parseInt(e.target.value) })      // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng khi ng∆∞·ªùi d√πng thay ƒë·ªïi
                  }
                  style={{ maxWidth: "100px" }}
                />
              </div>
              <button
                onClick={this.addToCart}      // G·ªçi h√†m addToCart khi ng∆∞·ªùi d√πng click v√†o n√∫t
                className="btn btn-success w-100"
              >
                üõí Th√™m v√†o gi·ªè h√†ng
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }
}

export default withRouter(ProductDetail);
